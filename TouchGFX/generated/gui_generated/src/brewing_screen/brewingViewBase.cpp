/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/brewing_screen/brewingViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

brewingViewBase::brewingViewBase() :
    flexButtonCallback(this, &brewingViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 320, 240);
    background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(background);

    brewing_data.setXY(0, 96);
    add(brewing_data);

    button_brew.setBoxWithBorderPosition(0, 0, 136, 72);
    button_brew.setBorderSize(5);
    button_brew.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    button_brew.setAction(flexButtonCallback);
    button_brew.setPosition(184, 168, 136, 72);
    add(button_brew);

    button_pump_minus.setBoxWithBorderPosition(0, 0, 50, 42);
    button_pump_minus.setBorderSize(5);
    button_pump_minus.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    button_pump_minus.setAction(flexButtonCallback);
    button_pump_minus.setPosition(270, 42, 50, 42);
    add(button_pump_minus);

    button_pump_plus.setBoxWithBorderPosition(0, 0, 50, 42);
    button_pump_plus.setBorderSize(5);
    button_pump_plus.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    button_pump_plus.setAction(flexButtonCallback);
    button_pump_plus.setPosition(270, 0, 50, 42);
    add(button_pump_plus);

    button_temp_minus.setBoxWithBorderPosition(0, 0, 50, 42);
    button_temp_minus.setBorderSize(5);
    button_temp_minus.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    button_temp_minus.setAction(flexButtonCallback);
    button_temp_minus.setPosition(196, 2, 50, 42);
    add(button_temp_minus);

    button_temp_plus.setBoxWithBorderPosition(0, 0, 50, 42);
    button_temp_plus.setBorderSize(5);
    button_temp_plus.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    button_temp_plus.setAction(flexButtonCallback);
    button_temp_plus.setPosition(146, 2, 50, 42);
    add(button_temp_plus);

    button_flush_wand.setBoxWithBorderPosition(0, 0, 130, 72);
    button_flush_wand.setBorderSize(5);
    button_flush_wand.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    button_flush_wand.setAction(flexButtonCallback);
    button_flush_wand.setPosition(0, 168, 130, 72);
    add(button_flush_wand);

    button_time_plus.setBoxWithBorderPosition(0, 0, 50, 42);
    button_time_plus.setBorderSize(5);
    button_time_plus.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    button_time_plus.setAction(flexButtonCallback);
    button_time_plus.setPosition(146, 44, 50, 42);
    add(button_time_plus);

    button_time_minus.setBoxWithBorderPosition(0, 0, 50, 42);
    button_time_minus.setBorderSize(5);
    button_time_minus.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    button_time_minus.setAction(flexButtonCallback);
    button_time_minus.setPosition(196, 44, 50, 42);
    add(button_time_minus);

    brew_text.setXY(227, 192);
    brew_text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    brew_text.setLinespacing(0);
    brew_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WK4I));
    add(brew_text);

    flush_wand_text.setXY(7, 192);
    flush_wand_text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    flush_wand_text.setLinespacing(0);
    flush_wand_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TNAV));
    add(flush_wand_text);

    plus_sign_temp.setXY(163, 11);
    plus_sign_temp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    plus_sign_temp.setLinespacing(0);
    plus_sign_temp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I7VD));
    add(plus_sign_temp);

    minus_sign_temp.setXY(217, 12);
    minus_sign_temp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    minus_sign_temp.setLinespacing(0);
    minus_sign_temp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QU9O));
    add(minus_sign_temp);

    set_temp_text.setXY(0, 0);
    set_temp_text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    set_temp_text.setLinespacing(0);
    Unicode::snprintf(set_temp_textBuffer, SET_TEMP_TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_K8U6).getText());
    set_temp_text.setWildcard(set_temp_textBuffer);
    set_temp_text.resizeToCurrentText();
    set_temp_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KE74));
    add(set_temp_text);

    set_time_text.setXY(7, 44);
    set_time_text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    set_time_text.setLinespacing(0);
    Unicode::snprintf(set_time_textBuffer, SET_TIME_TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NLZR).getText());
    set_time_text.setWildcard(set_time_textBuffer);
    set_time_text.resizeToCurrentText();
    set_time_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JT91));
    add(set_time_text);

    plus_sign_time.setXY(163, 53);
    plus_sign_time.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    plus_sign_time.setLinespacing(0);
    plus_sign_time.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5P90));
    add(plus_sign_time);

    minus_sign_time.setXY(217, 53);
    minus_sign_time.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    minus_sign_time.setLinespacing(0);
    minus_sign_time.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86CG));
    add(minus_sign_time);

    plus_sign_pump.setXY(287, 9);
    plus_sign_pump.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    plus_sign_pump.setLinespacing(0);
    plus_sign_pump.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KFW1));
    add(plus_sign_pump);

    minus_sign_pump.setXY(291, 51);
    minus_sign_pump.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    minus_sign_pump.setLinespacing(0);
    minus_sign_pump.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J2FV));
    add(minus_sign_pump);

    pump_info.setXY(282, 86);
    pump_info.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    pump_info.setLinespacing(0);
    Unicode::snprintf(pump_infoBuffer, PUMP_INFO_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VDTG).getText());
    pump_info.setWildcard(pump_infoBuffer);
    pump_info.resizeToCurrentText();
    pump_info.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQUN));
    add(pump_info);

    heater_info.setXY(129, 96);
    heater_info.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    heater_info.setLinespacing(0);
    Unicode::snprintf(heater_infoBuffer, HEATER_INFO_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_MIR8).getText());
    heater_info.setWildcard(heater_infoBuffer);
    heater_info.resizeToCurrentText();
    heater_info.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z2KT));
    add(heater_info);
}

brewingViewBase::~brewingViewBase()
{

}

void brewingViewBase::setupScreen()
{
    brewing_data.initialize();
}

void brewingViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &button_brew)
    {
        //startStopBrew
        //When button_brew clicked call virtual function
        //Call startStopBrew
        startStopBrew();
    }
    if (&src == &button_flush_wand)
    {
        //flushWand
        //When button_flush_wand clicked call virtual function
        //Call flushWand
        flushWand();
    }
    if (&src == &button_time_plus)
    {
        //increaseTime
        //When button_time_plus clicked call virtual function
        //Call increaseTime
        increaseTime();
    }
    if (&src == &button_time_minus)
    {
        //decreaseTime
        //When button_time_minus clicked call virtual function
        //Call decreaseTime
        decreaseTime();
    }
    if (&src == &button_temp_plus)
    {
        //increaseTemp
        //When button_temp_plus clicked call virtual function
        //Call increaseTemp
        increaseTemp();
    }
    if (&src == &button_temp_minus)
    {
        //decreaseTemp
        //When button_temp_minus clicked call virtual function
        //Call decreaseTemp
        decreaseTemp();
    }
    if (&src == &button_pump_plus)
    {
        //increasePump
        //When button_pump_plus clicked call virtual function
        //Call increasePump
        increasePump();
    }
    if (&src == &button_pump_minus)
    {
        //decreasePump
        //When button_pump_minus clicked call virtual function
        //Call decreasePump
        decreasePump();
    }
}
