/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef BREWINGVIEWBASE_HPP
#define BREWINGVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/brewing_screen/brewingPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/Brewing_data.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class brewingViewBase : public touchgfx::View<brewingPresenter>
{
public:
    brewingViewBase();
    virtual ~brewingViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void startStopBrew()
    {
        // Override and implement this function in brewing
    }
    virtual void flushWand()
    {
        // Override and implement this function in brewing
    }
    virtual void increaseTime()
    {
        // Override and implement this function in brewing
    }
    virtual void decreaseTime()
    {
        // Override and implement this function in brewing
    }
    virtual void increaseTemp()
    {
        // Override and implement this function in brewing
    }
    virtual void decreaseTemp()
    {
        // Override and implement this function in brewing
    }
    virtual void increasePump()
    {
        // Override and implement this function in brewing
    }
    virtual void decreasePump()
    {
        // Override and implement this function in brewing
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    Brewing_data brewing_data;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  button_brew;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button_pump_minus;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button_pump_plus;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button_temp_minus;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button_temp_plus;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  button_flush_wand;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button_time_plus;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button_time_minus;
    touchgfx::TextArea brew_text;
    touchgfx::TextArea flush_wand_text;
    touchgfx::TextArea plus_sign_temp;
    touchgfx::TextArea minus_sign_temp;
    touchgfx::TextAreaWithOneWildcard set_temp_text;
    touchgfx::TextAreaWithOneWildcard set_time_text;
    touchgfx::TextArea plus_sign_time;
    touchgfx::TextArea minus_sign_time;
    touchgfx::TextArea plus_sign_pump;
    touchgfx::TextArea minus_sign_pump;
    touchgfx::TextAreaWithOneWildcard pump_info;
    touchgfx::TextAreaWithOneWildcard heater_info;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SET_TEMP_TEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar set_temp_textBuffer[SET_TEMP_TEXT_SIZE];
    static const uint16_t SET_TIME_TEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar set_time_textBuffer[SET_TIME_TEXT_SIZE];
    static const uint16_t PUMP_INFO_SIZE = 10;
    touchgfx::Unicode::UnicodeChar pump_infoBuffer[PUMP_INFO_SIZE];
    static const uint16_t HEATER_INFO_SIZE = 10;
    touchgfx::Unicode::UnicodeChar heater_infoBuffer[HEATER_INFO_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<brewingViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // BREWINGVIEWBASE_HPP
