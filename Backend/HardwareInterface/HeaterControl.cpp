/*
 * HeaterControl.cpp
 *
 *  Created on: 06.04.2023
 *      Author: simon
 */

#include "HeaterControl.hpp"

#include "main.h"
#include "TriacControl.hpp"

uint32_t HeaterControl::control_sequence[33] = {
		0b00000000000000000000000000000000,
		0b10000000000000000000000000000000,
		0b10000000000000001000000000000000,
		0b10000000000100000000001000000000,
		0b10000000100000001000000010000000,
		0b10000001000001000000100000100000,
		0b10000010000100001000001000010000,
		0b10000100001000010000100010001000,
		0b10001000100010001000100010001000,
		0b10001000100010001000100100100100,
		0b10001001001001001000100100100100,
		0b10010010010010010010010010010010,
		0b10010010010010010010010010101010,
		0b10010100101001010010100101001010,
		0b10010101001010100101010010101010,
		0b10010101010101010010101010101010,
		0b10101010101010101010101010101010,
		0b11010101010101011010101010101010,
		0b11010101101010110101011010101010,
		0b11010110101101011010110101101010,
		0b11011011011011011011011010101010,
		0b11011011011011011011011011011010,
		0b11101101101101101110110110110110,
		0b11101110111011101110110110110110,
		0b11101110111011101110111011101110,
		0b11110111101111011110111011101110,
		0b11111011110111101111101111011110,
		0b11111101111101111110111110111110,
		0b11111110111111101111111011111110,
		0b11111111110111111111101111111110,
		0b11111111111111101111111111111110,
		0b11111111111111111111111111111110,
		0b11111111111111111111111111111111,
};

//between 0 and 100
//rough power value
void HeaterControl::setPower(uint8_t power) {
	queued_power_level = power;
	if(power < 0) queued_power_level = 0;
	if(power > 32) queued_power_level = 32;
}

uint8_t HeaterControl::getPowerLvl() {
	return queued_power_level;
}

void HeaterControl::proccess() {
	heater_state ? heater_turnOn() : heater_turnOff();
	if (control_index >= 31) {
		control_index = 0;
		power_level = queued_power_level; //only gets assigned when the sequence is done
	} else
		control_index++;
	heater_state = control_sequence[power_level] & (1 << control_index);
}
